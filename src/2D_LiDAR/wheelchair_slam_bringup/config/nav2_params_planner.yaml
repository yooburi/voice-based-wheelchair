amcl:
  ros__parameters:
    use_sim_time: false
    base_frame_id: base_link
    odom_frame_id: odom
    global_frame_id: map
    scan_topic: /scan
    set_initial_pose: false
    min_particles: 500
    max_particles: 2000
    update_min_d: 0.05
    update_min_a: 0.05

map_server:
  ros__parameters:
    # 런치에서 map:= 인자로 덮어씀. 기본값 예시만 유지.
    yaml_filename: "/home/yoo/workspace/dolchair_ws/config/maps/gongA_map.yaml"

global_costmap:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    use_sim_time: false
    update_frequency: 5.0
    publish_frequency: 2.0
    rolling_window: false
    resolution: 0.05
    footprint_padding: 0.01
    track_unknown_space: true
    # 로봇 크기(반경)
    robot_radius: 1.0
    # 정적 지도 + 동적 장애물(LiDAR/Depth) + 인플레이션
    plugins: ["static_layer", "inflation_layer"]

    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"
      map_subscribe_transient_local: true

    obstacle_lidar:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: scan
      scan:
        topic: /scan
        data_type: LaserScan
        marking: true
        clearing: true
        obstacle_range: 4.0
        raytrace_range: 4.5

    

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.45
      cost_scaling_factor: 2.5

local_costmap:
  ros__parameters:
    global_frame: odom
    robot_base_frame: base_link
    use_sim_time: false
    update_frequency: 10.0
    publish_frequency: 5.0
    rolling_window: true
    width: 6.0
    height: 6.0
    resolution: 0.05
    # 로봇 크기(반경)
    robot_radius: 1.0
    plugins: ["obstacle_lidar","voxel_layer", "inflation_layer"]

    obstacle_lidar:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: scan
      scan:
        topic: /scan
        sensor_frame: laser_frame
        data_type: LaserScan
        marking: true
        clearing: true
        obstacle_range: 4.0
        raytrace_range: 4.5

    voxel_layer:
      plugin: "nav2_costmap_2d::VoxelLayer"
      origin_z: 0.0
      z_voxels: 16
      z_resolution: 0.075
      max_obstacle_height: 1.6
      unknown_threshold: 10
      mark_threshold: 2
      observation_sources: depth_cloud
      depth_cloud:
        topic: /depth_camera/depth/color/points
        data_type: PointCloud2
        marking: true
        clearing: true

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.45
      cost_scaling_factor: 2.5

planner_server:
  ros__parameters:
    expected_planner_frequency: 5.0
    use_sim_time: false
    planner_plugins: ["GridBased"]

    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"
      tolerance: 0.15
      downsample_costmap: false
      allow_unknown: true
      max_iterations: 10000
      max_on_approach_iterations: 1000
      minimum_turning_radius: 0.01
      motion_model_for_search: "REEDS_SHEPP"
      cost_travel_multiplier: 1.0
      cache_obstacle_footprint: true
      
controller_server:
  ros__parameters:
    controller_frequency: 10.0
    controller_plugins: ["FollowPath"]
    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"
      time_steps: 50
      model_dt: 0.1
      batch_size: 2000
      vx_std: 0.2
      vy_std: 0.0
      wz_std: 0.7
      vx_max: 0.19
      vx_min: -0.19
      vy_max: 0.0
      wz_max: 0.13
      ax_max: 0.19
      ax_min: -0.19
      ay_min: 0.0
      ay_max: 0.0
      az_max: 0.7
      iteration_count: 1
      prune_distance: 1.7
      transform_tolerance: 0.1
      temperature: 0.3
      gamma: 0.015
      motion_model: "DiffDrive"
      visualize: false
      reset_period: 1.0 # (only in Humble)
      regenerate_noises: false
      TrajectoryVisualizer:
        trajectory_step: 5
        time_step: 3
      TrajectoryValidator:
        plugin: "mppi::DefaultOptimalTrajectoryValidator"
        collision_lookahead_time: 2.0
        consider_footprint: false
      critics: ["ConstraintCritic", "CostCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 4.0
      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 1.4
      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0
        threshold_to_consider: 0.5
      PreferForwardCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 0.5
      CostCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.81
        critical_cost: 300.0
        consider_footprint: false
        collision_cost: 1000000.0
        near_goal_distance: 1.0
        trajectory_point_step: 2
      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 14.0
        max_path_occupancy_ratio: 0.05
        trajectory_point_step: 4
        threshold_to_consider: 0.5
        offset_from_furthest: 20
        use_path_orientations: false
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        offset_from_furthest: 5
        threshold_to_consider: 1.4
      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
        offset_from_furthest: 4
        threshold_to_consider: 0.5
        max_angle_to_furthest: 1.0
        mode: 0

behavior_server:
  ros__parameters:
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin" # In Iron and older versions, "/" was used instead of "::"
    backup:
      plugin: "nav2_behaviors/BackUp" # In Iron and older versions, "/" was used instead of "::"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading" # In Iron and older versions, "/" was used instead of "::"
    wait:
      plugin: "nav2_behaviors/Wait" # In Iron and older versions, "/" was used instead of "::"

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10 # ms
    
    # 사용할 행동 트리 XML 파일 (Nav2 기본 제공)
    default_nav_through_poses_bt_xml: "/opt/ros/humble/share/nav2_bt_navigator/behavior_trees/navigate_w_replanning_only_if_path_becomes_invalid.xml"

    # 플러그인 라이브러리 (필수)
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_distance_traveled_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node

lifecycle_manager:
  ros__parameters:
    autostart: true
    # Standalone costmap nodes are not launched; planner_server owns the global costmap
    node_names: ["map_server", "amcl", "planner_server","controller_server","bt_navigator","behavior_server",]

