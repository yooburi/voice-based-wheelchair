amcl:
  ros__parameters:
    use_sim_time: false
    base_frame_id: base_link
    odom_frame_id: odom
    global_frame_id: map
    scan_topic: /scan
    set_initial_pose: false
    min_particles: 500
    max_particles: 2000
    update_min_d: 0.05
    update_min_a: 0.05

# 맵서버(정적 지도 제공)
map_server:
  ros__parameters:
    # 런치에서 map:= 인자로 덮어씌움. 기본값 예시만 유지.
    yaml_filename: "/home/yoo/workspace/dolchair_ws/config/maps/gongA_map.yaml"

global_costmap:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    use_sim_time: false
    update_frequency: 5.0
    publish_frequency: 2.0
    rolling_window: false
    resolution: 0.05
    track_unknown_space: false
    # 로봇 크기(반경)
    robot_radius: 0.30
    # 정적 지도 + 동적 장애물(LiDAR/Depth) + 인플레이션
    plugins: ["static_layer", "obstacle_lidar", "obstacle_depth", "inflation_layer"]

    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"
      map_subscribe_transient_local: true

    obstacle_lidar:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: scan
      scan:
        topic: /scan
        data_type: LaserScan
        marking: true
        clearing: true
        obstacle_range: 4.0
        raytrace_range: 4.5

    obstacle_depth:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: depth_cloud
      depth_cloud:
        topic: /depth_camera/depth/color/points
        data_type: PointCloud2
        marking: true
        clearing: true
        obstacle_range: 3.5
        raytrace_range: 4.0
        min_obstacle_height: 0.02
        max_obstacle_height: 1.5

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.5
      cost_scaling_factor: 2.5

local_costmap:
  ros__parameters:
    global_frame: odom
    robot_base_frame: base_link
    use_sim_time: false
    update_frequency: 10.0
    publish_frequency: 5.0
    rolling_window: true
    width: 6.0
    height: 6.0
    resolution: 0.05
    # 로봇 크기(반경)
    robot_radius: 0.30
    plugins: ["obstacle_lidar", "obstacle_depth", "voxel_layer", "inflation_layer"]

    obstacle_lidar:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: scan
      scan:
        topic: /scan
        sensor_frame: laser_frame
        data_type: LaserScan
        marking: true
        clearing: true
        obstacle_range: 4.0
        raytrace_range: 4.5

    obstacle_depth:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: depth_cloud
      depth_cloud:
        topic: /depth_camera/depth/color/points
        data_type: PointCloud2
        marking: true
        clearing: true
        obstacle_range: 3.5
        raytrace_range: 4.0
        min_obstacle_height: 0.02
        max_obstacle_height: 1.5

    voxel_layer:
      plugin: "nav2_costmap_2d::VoxelLayer"
      origin_z: 0.0
      z_voxels: 16
      z_resolution: 0.075
      max_obstacle_height: 1.6
      unknown_threshold: 10
      mark_threshold: 2
      observation_sources: depth_cloud
      depth_cloud:
        topic: /depth_camera/depth/color/points
        data_type: PointCloud2
        marking: true
        clearing: true

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.5
      cost_scaling_factor: 2.5

planner_server:
  ros__parameters:
    expected_planner_frequency: 5.0
    use_sim_time: false
    planner_plugins: ["GridBased"]

    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"
      tolerance: 0.15
      downsample_costmap: false
      allow_unknown: false
      max_iterations: 10000
      max_on_approach_iterations: 1000
      minimum_turning_radius: 0.6
      motion_model_for_search: "DUBIN"
      cost_travel_multiplier: 2.0
      cache_obstacle_footprint: true

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 15.0
    min_x_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.20
      yaw_goal_tolerance: 0.35
      stateful: false

    controller_plugins: ["FollowPath"]

    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      # path_follower 감각에 맞춘 고정 룩어헤드/속도
      desired_linear_vel: 2.0            # 목표 선속도(m/s)
      min_lookahead_dist: 0.8            # 최소 룩어헤드(m)
      max_lookahead_dist: 0.8            # 최대 룩어헤드(m) = 고정화
      lookahead_time: 0.0                # 속도 기반 룩어헤드 비활성(0)
      transform_tolerance: 0.2           # TF 허용 지연(s)
      use_velocity_scaled_lookahead_dist: false  # 속도에 따른 룩어헤드 스케일링 비활성
      use_interpolation: true            # 경로 보간 사용(부드러운 추종)
      # 정렬 우선 동작: 제자리 회전으로 헤딩 정렬 후 전진
      use_rotate_to_heading: true
      rotate_to_heading_min_angle: 0.0873   # 정렬 임계각(라디안) ≈ 5도
      rotate_to_heading_angular_vel: 3.0    # 정렬 회전 속도(rad/s)
      allow_reversing: false              # 후진 비허용(안정성)
      regulate_turning_velocity: false    # 회전 시 속도 감속 규제 비활성(고정 속도 유지)
      # 장애물 근접 감속 기능: 현재 비활성(필요 시 true로 변경)
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.6  # 감속 시작 반径(m)
      regulated_linear_scaling_min_speed: 0.25  # 최저 감속 속도(m/s)
      cost_scaling_dist: 0.5
      cost_scaling_gain: 3.0
      min_approach_linear_velocity: 0.18  # 목표 접근 시 최소 속도

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.2
    # default_nav_to_pose_bt_xml / default_nav_through_poses_bt_xml 은 런치에서 지정
    bt_loop_duration: 10
    default_server_timeout: 20
    enable_stamped_cmd_vel: false

behavior_server:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.2
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

lifecycle_manager:
  ros__parameters:
    autostart: true
    node_names: [
      "map_server",
      "amcl",
      "planner_server",
      "controller_server",
      "behavior_server",
      "bt_navigator"
    ]
