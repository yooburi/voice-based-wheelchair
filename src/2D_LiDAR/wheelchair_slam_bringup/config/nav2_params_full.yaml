# AMCL (입자필터 기반 로컬라이제이션)
# - TF 체인: map → odom → base_link 유지
# - LiDAR 스캔 토픽명(/scan)과 프레임 일치 필수
amcl:
  ros__parameters:
    use_sim_time: false
    base_frame_id: base_link
    odom_frame_id: odom
    global_frame_id: map
    scan_topic: /scan
    set_initial_pose: false
    min_particles: 500
    max_particles: 2000
    update_min_d: 0.05
    update_min_a: 0.05

# 맵 서버 (정적 지도 로드)
map_server:
  ros__parameters:
    # Overridden by launch via yaml_filename argument
    yaml_filename: "/home/yoo/workspace/dolchair_ws/config/maps/gongA_map.yaml"

# 전역 플래너 (Smac Hybrid-A*)
planner_server:
  ros__parameters:
    expected_planner_frequency: 5.0   # 계획 주기(Hz)
    use_sim_time: false
    planner_plugins: ["GridBased"]    # 사용 플러그인 목록
    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"   # 하이브리드 A* (연속 곡률 고려)
      tolerance: 0.15                   # 목표 허용 오차(경로 종단 거리)
      downsample_costmap: false         # 코스트맵 다운샘플링 비활성화(정밀도 유지)
      allow_unknown: false              # 미탐색 공간 허용 여부(환경 따라 true 가능)
      max_iterations: 10000             # 탐색 최대 반복 수(성능/최적화 트레이드오프)
      max_on_approach_iterations: 1000  # 목표 접근 시 추가 반복 제한
      minimum_turning_radius: 0.6       # 최소 회전반경(실기 회전반경 반영)
      motion_model_for_search: "DUBIN"  # 역주행 불가 모델(DUBIN)
      cost_travel_multiplier: 2.0       # 비용-거리 가중치(우회/안전 경로 성향)
      cache_obstacle_footprint: true    # 장애물 풋프린트 캐시로 성능 향상

# 로컬 컨트롤러 (Regulated Pure Pursuit: RPP)
controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0          # 제어 주기(Hz)
    min_x_velocity_threshold: 0.0001
    min_theta_velocity_threshold: 0.0001
    controller_plugins: ["FollowPath"]

    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller/RegulatedPurePursuitController"
      # path_follower 감각에 맞춘 고정 룩어헤드/속도
      desired_linear_vel: 2.0            # 목표 선속도(m/s)
      min_lookahead_dist: 0.8            # 최소 룩어헤드(m)
      max_lookahead_dist: 0.8            # 최대 룩어헤드(m) = 고정화
      lookahead_time: 0.0                # 속도 기반 룩어헤드 비활성(0)
      transform_tolerance: 0.2           # TF 허용 지연(s)
      use_velocity_scaled_lookahead_dist: false  # 속도에 따른 룩어헤드 스케일링 비활성
      use_interpolation: true            # 경로 보간 사용(부드러운 추종)
      # 정렬 우선 동작: 제자리 회전으로 헤딩 정렬 후 전진
      use_rotate_to_heading: true
      rotate_to_heading_min_angle: 0.0873   # 정렬 임계각(라디안) ≈ 5도
      rotate_to_heading_angular_vel: 3.0    # 정렬 회전 속도(rad/s)
      allow_reversing: false              # 후진 비허용(안정성)
      regulate_turning_velocity: false    # 회전 시 속도 감속 규제 비활성(고정 속도 유지)
      # 장애물 근접 감속 기능: 현재 비활성(필요 시 true로 변경)
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.6  # 감속 시작 반径(m)
      regulated_linear_scaling_min_speed: 0.25  # 최저 감속 속도(m/s)
      cost_scaling_dist: 0.5
      cost_scaling_gain: 3.0
      min_approach_linear_velocity: 0.18  # 목표 접근 시 최소 속도
      approach_velocity_scaling_dist: 0.6 # 목표 접근 감속 거리(m)

# BT Navigator (행동트리 기반 내비게이션, 재계획/리커버리 포함)
bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.2
    # Standard tree with replanning + recoveries
    default_nav_to_pose_bt_xml: "navigate_w_replanning_and_recovery.xml"
    default_nav_through_poses_bt_xml: "navigate_through_poses_w_replanning_and_recovery.xml"
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_path_expiring_timer_condition_bt_node
      - nav2_distance_traveled_condition_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_smoothing_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_straight_condition_bt_node
      - nav2_goal_updated_controller_bt_node
    # Progress / goal checkers (stall + tolerance)
    progress_checker_plugin: "progress_checker"   # 정체(진행 없음) 감지
    goal_checker_plugins: ["goal_checker"]       # 목표 도달 허용오차 판정
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"  # 일정 시간/거리 내 이동 없으면 실패
      required_movement_radius: 0.5   # 이동 최소 반경(m)
      movement_time_allowance: 8.0    # 허용 시간(s)
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.20        # 위치 허용오차(m)
      yaw_goal_tolerance: 0.0873     # 자세(요) 허용오차(라디안) ≈ 5도
      stateful: true                 # 목표 근방 유지 시 관대하게 판단

# 행동 서버 (Spin/BackUp/Wait) — Humble에서는 nav2_behaviors/behavior_server 사용
behavior_server:
  ros__parameters:
    use_sim_time: false
    costmap_topic: local_costmap/costmap_raw      # 로컬 코스트맵 토픽
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0                         # 동작 반복 주기(Hz)
    behavior_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    wait:
      plugin: "nav2_behaviors/Wait"

# 전역 코스트맵 (정적 지도 기반 경로계획용)
global_costmap:
  ros__parameters:
    global_frame: map                 # 전역 프레임
    robot_base_frame: base_link       # 로봇 기준 프레임
    use_sim_time: false
    update_frequency: 5.0             # 갱신 주기(Hz)
    publish_frequency: 2.0            # 퍼블리시 주기(Hz)
    rolling_window: false             # 전역은 고정 창
    resolution: 0.05                  # 해상도(m/셀)
    track_unknown_space: false        # 미탐색 공간을 장애물로 간주(false)
    robot_radius: 0.30                # 로봇 반경 또는 footprint 중 하나 사용
    plugins: ["static_layer", "obstacle_lidar", "obstacle_depth", "inflation_layer"]

    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"  # 정적 지도 레이어
      map_subscribe_transient_local: true      # Latched 맵 구독

    obstacle_lidar:
      plugin: "nav2_costmap_2d::ObstacleLayer"   # LiDAR 장애물 감지
      observation_sources: scan
      scan:
        topic: /scan
        data_type: LaserScan
        marking: true                 # 장애물 마킹
        clearing: true                # 광선추적으로 청소
        obstacle_range: 4.0           # 장애물 인식 범위(m)
        raytrace_range: 4.5           # 광선추적 범위(m)

    obstacle_depth:
      plugin: "nav2_costmap_2d::ObstacleLayer"   # 깊이 포인트클라우드 장애물
      observation_sources: depth_cloud
      depth_cloud:
        topic: /depth_camera/depth/color/points
        data_type: PointCloud2
        marking: true
        clearing: true
        obstacle_range: 3.5
        raytrace_range: 4.0
        min_obstacle_height: 0.02     # 바닥 제거(최소 높이)
        max_obstacle_height: 1.5      # 천장/높은 노이즈 제거

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"  # 안전 여유(인플레이션)
      inflation_radius: 0.5        # 인플레이션 반경(m)
      cost_scaling_factor: 2.5     # 비용 스케일(높을수록 급격히 증가)

# 로컬 코스트맵 (로컬 회피/감속/추종용, 롤링 윈도우)
local_costmap:
  ros__parameters:
    global_frame: odom               # 로컬 프레임(지연/진동 적은 쪽 선택)
    robot_base_frame: base_link
    use_sim_time: false
    update_frequency: 10.0
    publish_frequency: 5.0
    rolling_window: true             # 이동 창
    width: 6.0
    height: 6.0
    resolution: 0.05
    robot_radius: 0.30
    plugins: ["obstacle_lidar", "obstacle_depth", "voxel_layer", "inflation_layer"]

    obstacle_lidar:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: scan
      scan:
        topic: /scan
        sensor_frame: laser_frame
        data_type: LaserScan
        marking: true
        clearing: true
        obstacle_range: 4.0
        raytrace_range: 4.5

    obstacle_depth:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: depth_cloud
      depth_cloud:
        topic: /depth_camera/depth/color/points
        data_type: PointCloud2
        marking: true
        clearing: true
        obstacle_range: 3.5 # 장애물 인식 범위(m)
        raytrace_range: 4.0 # 광선추적 범위(m)
        min_obstacle_height: 0.3 # 바닥 제거(최소 높이)
        max_obstacle_height: 1.5 # 천장/높은 노이즈 제거

    voxel_layer:
      plugin: "nav2_costmap_2d::VoxelLayer"   # 3D 장애물 누적/클리어(깊이센서용)
      origin_z: 0.0
      z_voxels: 16
      z_resolution: 0.075
      max_obstacle_height: 1.6
      unknown_threshold: 10
      mark_threshold: 2
      observation_sources: depth_cloud
      depth_cloud:
        topic: /depth_camera/depth/color/points
        data_type: PointCloud2
        marking: true
        clearing: true

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.5
      cost_scaling_factor: 2.5

# 라이프사이클 매니저 (노드 자동 활성화)
lifecycle_manager:
  ros__parameters:
    autostart: true
    node_names: [
      "map_server",
      "amcl",
      "planner_server",
      "controller_server",
      "behavior_server",
      "bt_navigator",
    ]
